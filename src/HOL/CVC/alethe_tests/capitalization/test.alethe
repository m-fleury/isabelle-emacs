unsat
(assume a0 (not (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false)))
(anchor :step t2 :args ((:= (?v0 A$) VERIT_VR0)))
(step t2.t1 (cl (= ?v0 VERIT_VR0)) :rule refl)
(step t2.t2 (cl (= (p$ ?v0) (p$ VERIT_VR0))) :rule cong :premises (t2.t1))
(step t2 (cl (= (forall ((?v0 A$)) (p$ ?v0)) (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)))) :rule bind)
(step t3 (cl (= (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))))) :rule cong :premises (t2))
(step t4 (cl (= (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false) (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false))) :rule cong :premises (t3))
(step t5 (cl (= (not (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false)) (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)))) :rule cong :premises (t4))
(step t6 (cl (not (= (not (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false)) (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)))) (not (not (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false))) (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false))) :rule equiv_pos2)
(step t7 (cl (not (not (not (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false)))) (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false)) :rule not_not)
(step t8 (cl (not (= (not (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false)) (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)))) (=> (and (forall ((?v0 A$)) (p$ ?v0)) (not (p$ y$))) false) (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false))) :rule th_resolution :premises (t7 t6))
(step t9 (cl (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false))) :rule th_resolution :premises (a0 t5 t8))
(step t10 (cl (= (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)) (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false)))) :rule bool_simplify)
(step t11 (cl (not (= (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)) (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false)))) (not (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false))) (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false))) :rule equiv_pos2)
(step t12 (cl (not (not (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)))) (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)) :rule not_not)
(step t13 (cl (not (= (not (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false)) (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false)))) (=> (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) false) (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false))) :rule th_resolution :premises (t12 t11))
(step t14 (cl (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false))) :rule th_resolution :premises (t9 t10 t13))
(step t15 (cl (= (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false)) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false)))) :rule ac_simp)
(step t16 (cl (not (= (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false)) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false)))) (not (and (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (not false))) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false))) :rule equiv_pos2)
(step t17 (cl (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false))) :rule th_resolution :premises (t14 t15 t16))
(step t18 (cl (= (not false) true)) :rule not_simplify)
(step t19 (cl (= (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false)) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) true))) :rule cong :premises (t18))
(step t20 (cl (= (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) true) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))))) :rule and_simplify)
(step t21 (cl (= (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false)) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))))) :rule trans :premises (t19 t20))
(step t22 (cl (not (= (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false)) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))))) (not (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)) (not false))) (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)))) :rule equiv_pos2)
(step t23 (cl (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)))) :rule th_resolution :premises (t17 t21 t22))
(anchor :step t24 :args ((:= (VERIT_VR0 A$) ?T)))
(step t24.t1 (cl (= VERIT_VR0 ?T)) :rule refl)
(step t24.t2 (cl (= (p$ VERIT_VR0) (p$ ?T))) :rule cong :premises (t24.t1))
(step t24 (cl (= (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (forall ((T A$)) (p$ ?T)))) :rule bind)
(step t25 (cl (= (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (and (forall ((T A$)) (p$ ?T)) (not (p$ y$))))) :rule cong :premises (t24))
(step t26 (cl (not (= (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$))) (and (forall ((T A$)) (p$ ?T)) (not (p$ y$))))) (not (and (forall ((VERIT_VR0 A$)) (p$ VERIT_VR0)) (not (p$ y$)))) (and (forall ((T A$)) (p$ ?T)) (not (p$ y$)))) :rule equiv_pos2)
(step t27 (cl (and (forall ((T A$)) (p$ ?T)) (not (p$ y$)))) :rule th_resolution :premises (t23 t25 t26))
(step t28 (cl (forall ((T A$)) (p$ ?T))) :rule and :premises (t27))
(step t29 (cl (not (p$ y$))) :rule and :premises (t27))
(step t30 (cl (or (not (forall ((T A$)) (p$ ?T))) (p$ y$))) :rule forall_inst :args ((:= ?T y$)))
(step t31 (cl (not (forall ((T A$)) (p$ ?T))) (p$ y$)) :rule or :premises (t30))
(step t32 (cl) :rule resolution :premises (t31 t28 t29))

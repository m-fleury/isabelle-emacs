unsat
(assume a0 circuit)
(assume a1 (! (not (or (! (and (! (not prt) :named @p_5) car clk) :named @p_9) (! (and prt (! (or (! (not car) :named @p_3) clk) :named @p_7)) :named @p_8) (! (and (! (not prt) :named @p_5) (! (or (! (not car) :named @p_3) (! (not clk) :named @p_1)) :named @p_4)) :named @p_6) (! (and prt car @p_1) :named @p_2))) :named @p_10))
(step t0 (cl (not (! (= (! (or @p_5 @p_3 (! (not @p_1) :named @p_23)) :named @p_35) (! (or @p_5 @p_3 clk) :named @p_34)) :named @p_36)) (not @p_35) @p_34) :rule equiv_pos2)
(step t1 (cl (= @p_5 @p_5)) :rule refl)
(step t2 (cl (= @p_3 @p_3)) :rule refl)
(step t3 (cl (= @p_23 clk)) :rule all_simplify)
(step t4 (cl @p_36) :rule cong :premises (t1 t2 t3))
(step t5 (cl (not @p_2)) :rule not_or :premises (a1))
(step t6 (cl @p_5 @p_3 @p_23) :rule not_and :premises (t5))
(step t7 (cl @p_35 (! (not @p_5) :named @p_13)) :rule or_neg)
(step t8 (cl @p_35 (! (not @p_3) :named @p_18)) :rule or_neg)
(step t9 (cl @p_35 (! (not @p_23) :named @p_25)) :rule or_neg)
(step t10 (cl @p_35 @p_35 @p_35) :rule resolution :premises (t6 t7 t8 t9))
(step t11 (cl @p_35) :rule contraction :premises (t10))
(step t12 (cl @p_34) :rule resolution :premises (t0 t4 t11))
(step t13 (cl @p_5 @p_3 clk) :rule or :premises (t12))
(step t14 (cl clk @p_5 @p_3) :rule reordering :premises (t13))
(step t15 (cl @p_7 @p_1) :rule or_neg)
(step t16 (cl (not @p_8)) :rule not_or :premises (a1))
(step t17 (cl @p_5 (! (not @p_7) :named @p_30)) :rule not_and :premises (t16))
(step t18 (cl (not (! (= (! (or @p_13 @p_3 @p_1) :named @p_28) (! (or prt @p_3 @p_1) :named @p_27)) :named @p_29)) (not @p_28) @p_27) :rule equiv_pos2)
(step t19 (cl (= @p_13 prt)) :rule all_simplify)
(step t20 (cl (= @p_1 @p_1)) :rule refl)
(step t21 (cl @p_29) :rule cong :premises (t19 t2 t20))
(step t22 (cl (not @p_9)) :rule not_or :premises (a1))
(step t23 (cl @p_13 @p_3 @p_1) :rule not_and :premises (t22))
(step t24 (cl @p_28 (! (not @p_13) :named @p_15)) :rule or_neg)
(step t25 (cl @p_28 @p_18) :rule or_neg)
(step t26 (cl @p_28 @p_23) :rule or_neg)
(step t27 (cl @p_28 @p_28 @p_28) :rule resolution :premises (t23 t24 t25 t26))
(step t28 (cl @p_28) :rule contraction :premises (t27))
(step t29 (cl @p_27) :rule resolution :premises (t18 t21 t28))
(step t30 (cl prt @p_3 @p_1) :rule or :premises (t29))
(step t31 (cl (not (! (= (! (or @p_4 @p_23) :named @p_24) (! (or @p_4 clk) :named @p_22)) :named @p_26)) (not @p_24) @p_22) :rule equiv_pos2)
(step t32 (cl (= @p_4 @p_4)) :rule refl)
(step t33 (cl @p_26) :rule cong :premises (t32 t3))
(step t34 (cl @p_4 @p_23) :rule or_neg)
(step t35 (cl @p_24 (! (not @p_4) :named @p_11)) :rule or_neg)
(step t36 (cl @p_24 @p_25) :rule or_neg)
(step t37 (cl @p_24 @p_24) :rule resolution :premises (t34 t35 t36))
(step t38 (cl @p_24) :rule contraction :premises (t37))
(step t39 (cl @p_22) :rule resolution :premises (t31 t33 t38))
(step t40 (cl @p_4 clk) :rule or :premises (t39))
(step t41 (cl clk @p_4) :rule reordering :premises (t40))
(step t42 (cl (not (! (= (! (or @p_4 @p_18) :named @p_19) (! (or @p_4 car) :named @p_17)) :named @p_21)) (not @p_19) @p_17) :rule equiv_pos2)
(step t43 (cl (= @p_18 car)) :rule all_simplify)
(step t44 (cl @p_21) :rule cong :premises (t32 t43))
(step t45 (cl @p_4 @p_18) :rule or_neg)
(step t46 (cl @p_19 @p_11) :rule or_neg)
(step t47 (cl @p_19 (! (not @p_18) :named @p_20)) :rule or_neg)
(step t48 (cl @p_19 @p_19) :rule resolution :premises (t45 t46 t47))
(step t49 (cl @p_19) :rule contraction :premises (t48))
(step t50 (cl @p_17) :rule resolution :premises (t42 t44 t49))
(step t51 (cl @p_4 car) :rule or :premises (t50))
(step t52 (cl car @p_4) :rule reordering :premises (t51))
(step t53 (cl prt @p_4 @p_4) :rule resolution :premises (t30 t41 t52))
(step t54 (cl prt @p_4) :rule contraction :premises (t53))
(step t55 (cl (not (! (= (! (or @p_13 @p_11) :named @p_14) (! (or prt @p_11) :named @p_12)) :named @p_16)) (not @p_14) @p_12) :rule equiv_pos2)
(step t56 (cl (= @p_11 @p_11)) :rule refl)
(step t57 (cl @p_16) :rule cong :premises (t19 t56))
(step t58 (cl (not @p_6)) :rule not_or :premises (a1))
(step t59 (cl @p_13 @p_11) :rule not_and :premises (t58))
(step t60 (cl @p_14 @p_15) :rule or_neg)
(step t61 (cl @p_14 (not @p_11)) :rule or_neg)
(step t62 (cl @p_14 @p_14) :rule resolution :premises (t59 t60 t61))
(step t63 (cl @p_14) :rule contraction :premises (t62))
(step t64 (cl @p_12) :rule resolution :premises (t55 t57 t63))
(step t65 (cl prt @p_11) :rule or :premises (t64))
(step t66 (cl prt prt) :rule resolution :premises (t54 t65))
(step t67 (cl prt) :rule contraction :premises (t66))
(step t68 (cl @p_30) :rule resolution :premises (t17 t67))
(step t69 (cl @p_1) :rule resolution :premises (t15 t68))
(step t70 (cl (not (! (= (! (or @p_7 @p_18) :named @p_32) (! (or @p_7 car) :named @p_31)) :named @p_33)) (not @p_32) @p_31) :rule equiv_pos2)
(step t71 (cl (= @p_7 @p_7)) :rule refl)
(step t72 (cl @p_33) :rule cong :premises (t71 t43))
(step t73 (cl @p_7 @p_18) :rule or_neg)
(step t74 (cl @p_32 @p_30) :rule or_neg)
(step t75 (cl @p_32 @p_20) :rule or_neg)
(step t76 (cl @p_32 @p_32) :rule resolution :premises (t73 t74 t75))
(step t77 (cl @p_32) :rule contraction :premises (t76))
(step t78 (cl @p_31) :rule resolution :premises (t70 t72 t77))
(step t79 (cl @p_7 car) :rule or :premises (t78))
(step t80 (cl car @p_7) :rule reordering :premises (t79))
(step t81 (cl car) :rule resolution :premises (t80 t68))
(step t82 (cl) :rule resolution :premises (t14 t69 t81 t67))

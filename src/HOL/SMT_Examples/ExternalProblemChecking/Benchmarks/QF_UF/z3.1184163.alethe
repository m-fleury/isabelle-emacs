unsat
(assume a0 (not (= f1 f2)))
(assume a1 (! (not (= (! (f3 f4 f5 f6 f7 (! (f8 f9) :named @p_1)) :named @p_2) f1)) :named @p_3))
(assume a2 (! (= (! (f3 f4 f5 f6 f7 f10) :named @p_4) f1) :named @p_5))
(assume a3 (! (= f10 @p_1) :named @p_6))
(step t0 (cl (not (! (= (! (not (! (= f1 @p_2) :named @p_7)) :named @p_8) false) :named @p_9)) (not @p_8) false) :rule equiv_pos2)
(step t1 (cl (= f1 @p_4)) :rule symm :premises (a2))
(step t2 (cl (= f4 f4)) :rule refl)
(step t3 (cl (= f5 f5)) :rule refl)
(step t4 (cl (= f6 f6)) :rule refl)
(step t5 (cl (= f7 f7)) :rule refl)
(step t6 (cl (= @p_4 @p_2)) :rule cong :premises (t2 t3 t4 t5 a3))
(step t7 (cl @p_7) :rule trans :premises (t1 t6))
(step t8 (cl (! (= @p_2 @p_2) :named @p_10)) :rule refl)
(step t9 (cl (= @p_7 @p_10)) :rule cong :premises (t7 t8))
(step t10 (cl (= @p_8 (! (not @p_10) :named @p_11))) :rule cong :premises (t9))
(step t11 (cl (= @p_10 true)) :rule all_simplify)
(step t12 (cl (= @p_11 (! (not true) :named @p_12))) :rule cong :premises (t11))
(step t13 (cl (= @p_12 false)) :rule all_simplify)
(step t14 (cl (= @p_11 false)) :rule trans :premises (t12 t13))
(step t15 (cl @p_9) :rule trans :premises (t10 t14))
(step t16 (cl @p_8) :rule not_symm :premises (a1))
(step t17 (cl false) :rule resolution :premises (t0 t15 t16))
(step t18 (cl (not false)) :rule false)
(step t19 (cl) :rule resolution :premises (t17 t18))
